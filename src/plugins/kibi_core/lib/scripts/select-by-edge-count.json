{
  "title": "Select - By Edge Count",
  "description": "Select nodes by their number of relations",
  "scriptSource": "function beforeAll(graphModel, graphSelection) {\n  let html = '<input type=\"checkbox\" ng-model=\"visible\"> Consider only visible edges </input></br>'\n    + 'Relation count: <input type=\"text\" ng-model=\"number\" maxlength=\"5\" size=\"5\"/>';\n  _openModal('Insert the relations number', html);\n\n  return {\n    model: null,\n    selection: null\n  };\n}\n\nfunction onModalShow(scope, graphModel) {\n    scope.number = 2; // default value\n    scope.visible = true; // default value\n}\n\nfunction onModalOk(scope, graphModel) {\n    return {\n        onlyVisibleEdges: scope.visible,\n        relationsNumber: scope.number\n    }\n}\n\nfunction afterModalClosed(graphModel, graphSelection, onOkModalResult) {\n    let selection = [];\n    \n    if(onOkModalResult.onlyVisibleEdges) {\n        let nodesMap = {};\n        _.each(graphModel.relations, function (relation) {\n            if (nodesMap[relation.in]) {\n                nodesMap[relation.in] = nodesMap[relation.in] +1;\n            } else {\n                nodesMap[relation.in] = 1;\n            }\n            \n            if (nodesMap[relation.out]) {\n                nodesMap[relation.out] = nodesMap[relation.in] +1;\n            } else {\n                nodesMap[relation.out] = 1;\n            }\n        });\n        \n        for (var p in nodesMap) {\n            if (nodesMap.hasOwnProperty(p)) {\n                if (nodesMap[p] >= parseInt(onOkModalResult.relationsNumber, 10)) {\n                    selection.push(p);\n                }\n            }\n        }\n\n    } else {\n        _.each(graphModel.nodes, function (node) {\n            if (node.glyphs) {\n                _.each(node.glyphs, function (glyph) {\n                    if (glyph.p === 'ne' && parseInt(glyph.t, 10) >= parseInt(onOkModalResult.relationsNumber, 10)) {\n                        selection.push(node.id);\n                    } \n                });\n            }\n        });\n    }\n\n    return {\n        model: null,\n        selection: selection\n    };\n}",
  "version": 1,
  "type": "contextual",
  "kibanaSavedObjectMeta": {
    "searchSourceJSON": "{}"
  }
}
