[[upgrade]]
== Upgrading from a Previous Version

NOTE: Before upgrading make sure to check the <<breaking-changes>> section.

An existing {kibi-name} installation can be upgraded as follows:

- backup the `.kibi` index.
- backup the {kibi-name} configuration file (`config/kibi.yml`)
- backup the `.kibiaccess` if ACL (Access Control Layer) is enabled.
- {es-ref}setup-upgrade.html[upgrade Elasticsearch];
- before restarting each Elasticsearch node, make sure to install a compatible version of the
  {federate-website}#compatibility[Siren Federate] plugin and access control plugins if required.
- download and extract the new Kibi version.
- copy the previous configuration file to the `config` directory of the new installation.
- copy the files from the `data` directory in your old installation of the new installation.
- check for breaking changes to the configuration described below.
- install the compatible versions of third party {kibi-name}/Kibana plugins that you might need in addition to the bundled ones.
- execute the <<kibi-upgrade-command, upgrade command>>.

[float]
=== Backing up and Restoring the {kibi-name} Indices.

Before upgrading it is strongly recommended to have a backup of the `.kibi` index; the recommended way to perform regular backups of
Elasticsearch indexes is through the {elastic-ref}modules-snapshots.html[snapshot and restore modules].

{kibi-name} ships with a command line interface for creating dumps of the `.kibi` index and, in case the `ACL` is enabled, the `.kibiaccess` index as well.
An index dump is composed of two parts: its mappings and its data.

[float]
==== Backup

The backup command requires a running Elasticsearch instance and the path to a folder where the dumps will be written to.

You can know more about its options by executing the following:

[source,shell]
----
$ ./bin/kibi backup --help
----

For example, the following line will dump in `<MY_FOLDER>` the `.kibi` index and the `.kibiaccess` index if the option `kibi_access_control.acl.enabled` is true in `kibi.yml`:

[source,shell]
----
$ ./bin/kibi backup --backup-dir <MY_FOLDER>
----

[float]
==== Restore

The restore command requires a running Elasticsearch instance and the path to a folder where the dumps were written to by the previous backup command.

You can know more about its options by executing the following:

[source,shell]
----
$ ./bin/kibi restore --help
----

For example, you can restore the previously saved indices by executing the command and pointing to the dump folder, with `.kibiaccess` as well if the option `kibi_access_control.acl.enabled` is true in `kibi.yml`:

[source,shell]
----
$ ./bin/kibi restore --backup-dir <MY_FOLDER>
----

In addition, an <<kibi-upgrade-command,upgrade>> of the {kibi-name} indices is also executed after a successful restore.

[float]
[[kibi-upgrade-command]]
=== Upgrading the .kibi index.

To upgrade the objects in the `.kibi` index (dashboards, visualizations, etc.), move to the directory in which {kibi-name} is installed and
execute the following command:

[source,shell]
----
bin/kibi upgrade
----

The command will look for out of date objects and upgrade them, e.g.:

[source,shell]
----
$ bin/kibi upgrade
  log   [17:58:33.494] [info][status][plugin:elasticsearch] Status changed from uninitialized to yellow - Waiting for Elasticsearch
  log   [17:58:36.127] [info][migrations] Executing migration "Upgrade scripts from version 1 to version 2"
  log   [17:58:36.141] [info][migrations] Executed migration "Upgrade scripts from version 1 to version 2"
  log   [17:58:36.142] [info][migrations] Executing migration "Upgrade kibi graph browser visualization to version 2."
  log   [17:58:36.157] [info][migrations] Executed migration "Upgrade kibi graph browser visualization to version 2."
  log   [17:58:36.158] [info][migrations] Executing migration "Upgrade saved queries from version 1 to version 2"
  log   [17:58:36.242] [info][migrations] Executed migration "Upgrade saved queries from version 1 to version 2"
  log   [17:58:36.242] [info][migrations] Executing migration "Upgrade saved templates from version 1 to version 2"
  log   [17:58:36.303] [info][migrations] Executed migration "Upgrade saved templates from version 1 to version 2"
  log   [17:58:36.303] [info][migrations] Executing migration "Upgrade saved queries definitions in external query terms aggregation, enhanced search results and query viewer."
  log   [17:58:36.400] [info][migrations] Executed migration "Upgrade saved queries definitions in external query terms aggregation, enhanced search results and query viewer."
Upgraded 20 objects.
----

It is possible to run the command multiple times, however running the command at the same time from multiple machines is not supported.
