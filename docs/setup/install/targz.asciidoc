[[targz]]
=== Install {kibi-name} with `.tar.gz`

{kibi-name} is provided for Linux and Darwin as a `.tar.gz` package. These packages
are the easiest formats to use when trying out Kibana.

The latest stable version of Kibana can be found on the
link:/downloads/kibana[Download Kibana] page.
Other versions can be found on the
link:/downloads/past-releases[Past Releases page].


[[install-linux64]]
==== Download and install the Linux 64-bit package

ifeval::["{release-state}"=="unreleased"]

Version {version} of Kibana has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

The 64-bit Linux archive for Kibana v{version} can be downloaded and installed as follows:

["source",sh,subs="attributes+"]
--------------------------------------------
wget https://artifacts.elastic.co/downloads/kibana/kibana-{version}-linux-x86_64.tar.gz
sha1sum kibana-{version}-linux-x86_64.tar.gz <1>
tar -xzf kibana-{version}-linux-x86_64.tar.gz
cd kibana-{version}-linux-x86_64/ <2>
--------------------------------------------
<1> Compare the SHA produced by `sha1sum` or `shasum` with the
    https://artifacts.elastic.co/downloads/kibana/kibana-{version}-linux-x86_64.tar.gz.sha1[published SHA].
<2> This directory is known as `$KIBANA_HOME`.

endif::[]


[[install-linux32]]
==== Download and install the Linux 32-bit package

ifeval::["{release-state}"=="unreleased"]

Version {version} of Kibana has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

The 32-bit Linux archive for Kibana v{version} can be downloaded and installed as follows:

["source","sh",subs="attributes+"]
--------------------------------------------
wget https://artifacts.elastic.co/downloads/kibana/kibana-{version}-linux-x86.tar.gz
sha1sum kibana-{version}-linux-x86.tar.gz <1>
tar -xzf kibana-{version}-linux-x86.tar.gz
cd kibana/ <2>
--------------------------------------------
<1> Compare the SHA produced by `sha1sum` or `shasum` with the
    https://artifacts.elastic.co/downloads/kibana/kibana-{version}-linux-x86.tar.gz.sha1[published SHA].
<2> This directory is known as `$KIBANA_HOME`.

endif::[]


[[install-darwin64]]
==== Download and install the Darwin package

ifeval::["{release-state}"=="unreleased"]

Version {version} of Kibana has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

The Darwin archive for Kibana v{version} can be downloaded and installed as follows:

["source","sh",subs="attributes+"]
--------------------------------------------
curl -O https://artifacts.elastic.co/downloads/kibana/kibana-{version}-darwin-x86_64.tar.gz
shasum kibana-{version}-darwin-x86_64.tar.gz <1>
tar -xzf kibana-{version}-darwin-x86_64.tar.gz
cd kibana-{version}-darwin-x86_64/ <2>
--------------------------------------------
<1> Compare the SHA produced by `sha1sum` or `shasum` with the
    https://artifacts.elastic.co/downloads/kibana/kibana-{version}-darwin-x86_64.tar.gz.sha1[published SHA].
<2> This directory is known as `$KIBANA_HOME`.

endif::[]
>>>>>>> v5.6.0

tar.gz packages can be downloaded from the {download-ref}[download page].
The demo versions contain a pre-configured Elasticsearch cluster in addition to
{kibi-name}.

[[targz-running]]
==== Running {kibi-name} from the Command Line

{kibi-name} can be started from the command line as follows:

[source,sh]
--------------------------------------------
./bin/kibi
--------------------------------------------

By default, {kibi-name} runs in the foreground, prints its logs to the
standard output (`stdout`), and can be stopped by pressing `Ctrl-C`.

[[targz-configuring]]
==== Configuring {kibi-name} via Config File

{kibi-name} loads its configuration from the `$KIBI_HOME/config/kibi.yml`
file by default. The format of this config file is explained in
<<settings>>.

[[targz-layout]]
==== Directory Layout of `.tar.gz` Archives

The `.tar.gz` packages are entirely self-contained.

This is very convenient because you do not have to create any directories to
start using {kibi-name}, and uninstalling is as easy as removing the directory.
However, it is advisable to change the default locations of the config and data
directories so that you do not delete important data later on.


[cols="<h,<,<m,<m",options="header",]
|=======================================================================
| Type | Description | Default Location | Setting
| home
  | {kibi-name} home directory or `$KIBI_HOME`
 d| Directory created by unpacking the archive; in demo distributions,
    the directory is `kibi`.
 d|

| bin
  | Binary scripts including `kibi` to start the {kibi-name} server
    and `kibi-plugin` to install plugins
  | $KIBI_HOME\bin
 d|

| config
  | Configuration files including `kibi.yml`
  | $KIBI\config
 d|

| data
  | The location of the data files written to disk by {kibi-name} and its plugins
  | $KIBI_HOME\data
 d|

| optimize
  | Transpiled source code. Certain administrative actions, e.g., `plugin install`,
    result in the source code being retranspiled on the fly.
  | $KIBI\optimize
 d|

| plugins
  | The location of the plugin files. Each plugin will be contained in a subdirectory.
  | $KIBI\plugins
 d|

|=======================================================================
