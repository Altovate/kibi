[[connect-to-elasticsearch]]
== Connect Kibi to Elasticsearch

Before you can start using Kibi, you need to tell it which Elasticsearch indices you want to explore.
The first time you access Kibi, you are prompted to define an _index pattern_ that matches the name of
one or more of your indices. That's it. That's all you need to configure to start using Kibi. You can
add index patterns at any time from the <<settings-create-pattern,Management tab>>.

TIP: By default, Kibi connects to the Elasticsearch instance running on `localhost`. To connect to a
different Elasticsearch instance, modify the Elasticsearch URL in the `kibi.yml` configuration file and
restart Kibi. For information about using Kibi with your production nodes, see <<production>>.

To configure the Elasticsearch indices you want to access with Kibi:

. Point your browser at port {kibi-default-port} to access the Kibi UI. For example, `localhost:{kibi-default-port}` or
`http://YOURDOMAIN.com:{kibi-default-port}`.
+
image:images/Start-Page.png[Kibi start page]
+
. Specify an index pattern that matches the name of one or more of your Elasticsearch indices.
You may have to access the index patterns management in the <<settings-create-pattern,Management tab>>.
By default, Kibi guesses that you're working with data being fed into Elasticsearch by Logstash. If that's the case,
you can use the default `logstash-\*` as your index pattern. The asterisk (`*`) matches zero or more
characters in an index's name. If your Elasticsearch indices follow some other naming convention, enter
an appropriate pattern. The "pattern" can also simply be the name of a single index.
. Select the index field that contains the timestamp that you want to use to perform time-based
comparisons. Kibi reads the index mapping to list all of the fields that contain a timestamp. If your
index doesn't have time-based data, disable the *Index contains time-based events* option.
+
. Click *Create* to add the index pattern. This first pattern is automatically configured as the default.
When you have more than one index pattern, you can designate which one to use as the default by clicking
on the star icon above the index pattern title from *Management > Index Patterns*.

All done! Kibi is now connected to your Elasticsearch data. Kibi displays a read-only list of fields
configured for the matching index.

NOTE: Kibi relies on dynamic mapping to use fields in visualizations and manage the
`.kibi` index. If you have disabled dynamic mapping, you need to manually provide
mappings for the fields that Kibi uses to create visualizations. For more information, see
<<kibana-dynamic-mapping, Kibi and Elasticsearch Dynamic Mapping>>.

[float]
[[explore]]
=== Start Exploring your Data!
You're ready to dive in to your data:

* Search and browse your data interactively from the <<discover, Discover>> page.
* Chart and map your data from the <<visualize, Visualize>> page.
* Create and view custom dashboards from the <<dashboard, Dashboard>> page.

For a step-by-step introduction to these core Kibi concepts, see the <<getting_started,
Getting Started>> tutorial.

[float]
[[kibana-dynamic-mapping]]
=== Kibi and Elasticsearch Dynamic Mapping
By default, Elasticsearch enables {elastic-ref}dynamic-mapping.html[dynamic mapping] for fields. Kibi needs
dynamic mapping to use fields in visualizations correctly, as well as to manage the `.kibi` index
where saved searches, visualizations, and dashboards are stored.

If your Elasticsearch use case requires you to disable dynamic mapping, you need to manually provide
mappings for fields that Kibi uses to create visualizations. You also need to manually enable dynamic
mapping for the `.kibi` index.

The following procedure assumes that the `.kibi` index does not already exist in Elasticsearch and
that the `index.mapper.dynamic` setting in `elasticsearch.yml` is set to `false`:

. Start Elasticsearch.
. Create the `.kibi` index with dynamic mapping enabled just for that index:
+
[source,shell]
PUT .kibi
{
  "index.mapper.dynamic": true
}
+
. Start Kibi and navigate to the web UI and verify that there are no error messages related to dynamic
mapping.
