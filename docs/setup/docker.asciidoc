[[docker]]
== Running Kibi on Docker
Docker images for Kibi are available from the https://hub.docker.com/u/sirensolutions/[`sirensolutions`] organization on https://hub.docker.com[Dockerhub].

=== Pulling the Image
Obtaining Kibi for Docker is as simple as issuing a +docker pull+ command.

ifeval::["{release-state}"=="unreleased"]

However, version {version} of Kibi has not yet been released, so no Docker
image is currently available for this version.

endif::[]

ifeval::["{release-state}"!="unreleased"]

The Docker image for Kibi {version} can be retrieved with the following
command:

["source","sh",subs="attributes"]
--------------------------------------------
docker pull sirensolutions/{docker-image-name}:latest
docker run -d -p 5606:5606 -p 9220:9220 sirensolutions/{docker-image-name}:latest
--------------------------------------------

or for specific version, e.g., {version}:

["source","sh",subs="attributes"]
--------------------------------------------
docker pull sirensolutions/{docker-image-name}:{version}
docker run -d -p 5606:5606 -p 9220:9220 sirensolutions/{docker-image-name}:{version}
--------------------------------------------

For an image pre-populated with demonstration data:

["source","sh",subs="attributes"]
--------------------------------------------
docker pull sirensolutions/{docker-image-name}-demo-data:latest
docker run -d -p 5606:5606 -p 9220:9220 sirensolutions/{docker-image-name}-demo-data:latest
--------------------------------------------

[[docker-env-config]]
==== Environment variable configuration

Under Docker, Kibi can be configured via environment variables. When
the container starts, a helper process checks the environment for variables that
can be mapped to Kibi command-line arguments.

For compatibility with container orchestration systems, these
environment variables are written in all capitals, with underscores as
word separators. The helper translates these names to valid
Kibi setting names.

Some example translations are shown here:

.Example Docker Environment Variables
[horizontal]
**Environment Variable**:: **Kibi Setting**
`SERVER_NAME`:: `server.name`
`KIBANA_DEFAULTAPPID`:: `kibana.defaultAppId`
`XPACK_MONITORING_ENABLED`:: `xpack.monitoring.enabled`

In general, any setting listed in <<settings>> or
{xpack-ref}/xpack-settings.html[X-Pack Settings] can be configured
with this technique.

These variables can be set with +docker-compose+ like this:

["source","yaml",subs="attributes"]
----------------------------------------------------------
services:
  kibi:
    image: {docker-image}
    environment:
      SERVER_NAME: kibi.example.org
      ELASTICSEARCH_URL: http://elasticsearch.example.org
----------------------------------------------------------

Since environment variables are translated to CLI arguments, they take
precedence over settings configured in `kibi.yml`.

==== Docker defaults
The default settings when using the `siren-kibi` image (standalone Kibi image) are:

[horizontal]
`elasticsearch.url`:: `http://localhost:9220`
`server.basepath`:: `""`
`kibi.index`:: `.kibi`

endif::[]
