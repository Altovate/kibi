[[docker]]
== Running {kibi-name} on Docker
Docker images for {kibi-name} are available from the https://hub.docker.com/u/sirensolutions/[`sirensolutions`] organization on https://hub.docker.com[Dockerhub].

=== Pulling the Image
Obtaining {kibi-name} for Docker is as simple as issuing a +docker pull+ command.

ifeval::["{release-state}"=="unreleased"]

However, version {version} of {kibi-name} has not yet been released, so no Docker
image is currently available for this version.

endif::[]

ifeval::["{release-state}"!="unreleased"]

The Docker image for {kibi-name} {version} can be retrieved with the following
command:

["source","sh",subs="attributes"]
--------------------------------------------
docker pull sirensolutions/{docker-image-name}:latest
docker run -d -p 5606:5606 -p 9220:9220 sirensolutions/{docker-image-name}:latest
--------------------------------------------

or for specific version, e.g., {version}:

["source","sh",subs="attributes"]
--------------------------------------------
docker pull sirensolutions/{docker-image-name}:{version}
docker run -d -p 5606:5606 -p 9220:9220 sirensolutions/{docker-image-name}:{version}
--------------------------------------------

For an image pre-populated with demonstration data:

["source","sh",subs="attributes"]
--------------------------------------------
docker pull sirensolutions/{docker-image-name}-demo-data:latest
docker run -d -p 5606:5606 -p 9220:9220 sirensolutions/{docker-image-name}-demo-data:latest
--------------------------------------------

[[docker-env-config]]
==== Environment variable configuration

Under Docker, {kibi-name} can be configured via environment variables. When
the container starts, a helper process checks the environment for variables that
can be mapped to {kibi-name} command-line arguments.

For compatibility with container orchestration systems, these
environment variables are written in all capitals, with underscores as
word separators. The helper translates these names to valid
{kibi-name} setting names.

Some example translations are shown here:

.Example Docker Environment Variables
[horizontal]
**Environment Variable**:: **{kibi-name} Setting**
`SERVER_NAME`:: `server.name`
`KIBANA_DEFAULTAPPID`:: `kibana.defaultAppId`
`XPACK_MONITORING_ENABLED`:: `xpack.monitoring.enabled`

In general, any setting listed in <<settings>> or
{xpack-ref}/xpack-settings.html[X-Pack Settings] can be configured
with this technique.

These variables can be set with +docker-compose+ like this:

["source","yaml",subs="attributes"]
----------------------------------------------------------
services:
  investigate:
    image: {docker-image}
    environment:
      SERVER_NAME: siren.example.org
      ELASTICSEARCH_URL: http://elasticsearch.example.org
----------------------------------------------------------

Since environment variables are translated to CLI arguments, they take
precedence over settings configured in `investigate.yml`.

==== Docker defaults
The default settings when using the `siren-investigate` image (standalone {kibi-name} image) are:

[horizontal]
`elasticsearch.url`:: `http://localhost:9220`
`server.basepath`:: `""`
`kibana.index`:: `.siren`

endif::[]
