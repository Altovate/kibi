[[kibi-settings-relations]]
== Relations

In this panel, you can define relationships between index patterns. These
relationships ultimately form a **graph** of index patterns. This graph is used

in conjunction with the Siren Federate Plugin For Elasticsearch, allowing to perform join operations
between **dashboards**, i.e., filtering a dashboard's documents with regards to
another.

[float]
=== Graph of Index Patterns

A relationship is defined as a **join** operation between two indices with the
following fields:

- _Left Index Pattern_: the left index of the join;
- _Left Type_: the type of the left index of the join;
- _Left Field_: the field of the left index to join on;
- _Right Index Pattern_: the right index of the join;
- _Right Type_: the type of the right index of the join;
- _Right Field_: the field of the right index to join with; and
- _Label_: the label of the relation.

The image below displays a graph of four index patterns, where three
relationships have been defined. You can add a new relationship by clicking on the
"_Add relation_" button.

image::images/relations_settings/indices_settings_5.png["Graph of Index Patterns",align="center"]

[float]
[[kibi-join-limit]]
==== Join Limit
Clicking the image:images/EditVis.png["Edit pencil"] opens the advanced setting for each relation 
where you can set the maximum number of unique values returned from the related index pattern for that relation. 

As a semi-join, these documents will be filtered based on the presence of a *non-empty* value for the `join` field
in the other index pattern in the relation. 

The limit is a total upper limit on the number of unique values of the join field on the other index pattern for which the `join` field exists.
This limit is dynamically allocated over the shards where the index is located. 

The index pattern in question is then filtered by the values returned. 

These are used for displaying counts on relational buttons, for the content displayed on the current dashboard, etc.

Setting the limit here to -1 here sets the limit to the default `kibi:joinLimit` set in the {kibi-name} Advanced Settings 
and setting the limit to 0 here disables the limit entirely.

[float]
===== Example
- Index Pattern `A` has 100 documents and Index Pattern `B` has 50 documents
- The documents of `A` are filtered by adding a relation with `B`
- The limit is set to 10 for that relation

- In this case, the limit is set on `B`, so *10* unique values are returned from `B`
    * e.g. If the field joined had only `true`/`false` values, only 2 values would be returned, `true` and `false`
- These 10 values are then used to filter the documents in index `A`
- Potentially, this could return many more (or many less) than the limit set as
  there could be a large number of documents in `A` that match the 10 values 
  returned from `B`
- The final number of documents returned is always limited by the Elasticsearch `size` parameter

[float]
[[kibi-join-type]]
==== Join Type
Siren Federate provides three types of join algorithms; the plugin will try to pick the best algorithm
for a given join automatically, however you can force the selection by choosing one of the available options:

* MERGE_JOIN - Distributed join using merge join algorithm
* HASH_JOIN - Distributed join using hash join algorithm
* BROADCAST_JOIN - Broadcast join

A detailed description of each algorithm can be found in the Siren Federate plugin documentation.  

[float]
==== Index Patterns Management Icon
A relation is also indicated on the <<index-patterns,Index Patterns>> Management application thanks
to the image:images/relations_settings/index_relation_icon.png["Index
relation icon"] icon.  If you hover the mouse over it, a tooltip message is
displayed indicating the index pattern and field with which that field is joined.

For example, in the image below, that icon is displayed next to the field "id"
of the "investor" index, which is joined with the field "investorid" of the
"investment" index.

image::images/relations_settings/investor_index.png["Investor Index",align="center"]
