[[kibi_gremlin_server]]
= {kibi-name} Gremlin Server

The **{kibi-name} Gremlin Server** component is a backend component required by the <<graph_browser,{kibi-name} Graph Browser>>
visualisation.

In order to enable the Gremlin Server, make sure that `siren.yml` contains
the following configuration:

```yml
investigate_core:
  gremlin_server:
    url: http://127.0.0.1:8061
    path: gremlin_server/gremlin-es2-server.jar
```

To use Gremlin Server with an authentication enabled cluster, please refer
to the <<access_control,Authentication and access control>> section.

[float]
=== Log4J File Configuration Path:

**Log4J** configuration file is optional for the Gremlin server. If you want to use your own custom configuration, you can specify the path to your file with the `investigate_core.gremlin_server.log_conf_path` parameter inside your _investigate.yml_ file.
Here is an example of how to configure the _log4j.properties_ file for your Gremlin server:
```properties
# For the general syntax of property based configuration files see
# the documentation of org.apache.log4j.PropertyConfigurator.

# The root category uses two appenders: A1 and FILE.
# Both gather all log output starting with the priority INFO.
log4j.rootLogger=INFO, A1, FILE

log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.threshold=INFO
# Print the date in ISO 8601 format
log4j.appender.A1.layout.ConversionPattern=%d [%t] %-5p %c - %m%n

log4j.appender.FILE=org.apache.log4j.FileAppender
log4j.appender.FILE.append=true
log4j.appender.FILE.file=log/gremlin-server.log
log4j.appender.FILE.threshold=INFO
log4j.appender.FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern=%-5p %c: %m%n


# Print only messages of level WARN or above in the package org.springframework
log4j.logger.org.springframework=WARN
```
