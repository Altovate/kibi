[[watcher-actions]]
=== Actions

Currently supported *"actions"* for SIREN ALERT watchers:

[[email]]
Email
^^^^^

Send Query results and message via Email/SMTP

* Requires <<siren-config, action settings>> in Siren Investigate configuration

[source,json]
----
"email" : {
  "to" : "root@localhost",
  "from" : "sirenalert@localhost",
  "subject" : "Alarm Title",
  "priority" : "high",
  "body" : "Series Alarm {{ payload._id}}: {{payload.hits.total}}",
  "stateless" : false
}
----

[[email-html]]
Email HTML
^^^^^^^^^^

Send Query results and message via Email/SMTP using HTML body

* Requires <<siren-config, action settings>> in Siren Investigate configuration

[source,json]
----
"email_html" : {
  "to" : "root@localhost",
  "from" : "sirenalert@localhost",
  "subject" : "Alarm Title",
  "priority" : "high",
  "body" : "Series Alarm {{ payload._id}}: {{payload.hits.total}}",
  "html" : "<p>Series Alarm {{ payload._id}}: {{payload.hits.total}}</p>",
  "stateless" : false
}
----

[[webhook]]
webHook
^^^^^^^

Deliver message to remote web API

[source,json]
----
"webhook" : {
  "method" : "POST", 
  "host" : "remote.server", 
  "port" : 9200, 
  "path": ":/{{payload.watcher_id}}", 
  "body" : "{{payload.watcher_id}}:{{payload.hits.total}}",
  "create_alert" : true
}
----

[[webhook-via-proxy]]
webHook via Proxy
^^^^^^^^^^^^^^^^^

Deliver message to remote API via Proxy - Telegram example:

[source,json]
----
"webhook": {
  "method": "POST",
  "host": "remote.proxy",
  "port": "3128",
  "path": "https://api.telegram.org/bot{botId}/sendMessage",
  "body": "chat_id={chatId}&text=Count+total+hits:%20{{payload.hits.total}}",
  "headers": {
    "Content-Type": "application/x-www-form-urlencoded"
  },
  "create_alert" : true
}
----

[[slack]]
Slack
^^^^^

Delivery Message to #Slack channel

* Requires <<siren-config, action settings>> in Siren Investigate configuration

[source,json]
----
"slack" : {
  "channel": "#channel",
  "message" : "Series Alarm {{ payload._id}}: {{payload.hits.total}}",
  "stateless" : false
}
----

[[report-beta]]
Report _(BETA)_
^^^^^^^^^^^^^^^

Take a website Snapshot using PhantomJS and send it via Email/SMTP

* Requires <<siren-config, action settings>> in Siren Investigate configuration
* Requires Pageres/PhantomJS: `npm install -g pageres`

[source,json]
----
"report" : {
  "to" : "root@localhost",
  "from" : "kaae@localhost",
  "subject" : "Report Title",
  "priority" : "high",
  "body" : "Series Report {{ payload._id}}: {{payload.hits.total}}",
  "snapshot" : {
    "res" : "1280,900",
    "url" : "http://127.0.0.1/app/kibana#/dashboard/Alerts",
    "path" : "/tmp/",
    "params" : {
      "username" : "username",
      "password" : "password",
      "delay" : 5000,
      "crop" : false
    }
  },
  "stateless" : false
}
----

[[console]]
Console
^^^^^^^

Output Query results and message to Console

[source,json]
----
"console" : {
  "priority" : "DEBUG",
  "message" : "Average {{payload.aggregations.avg.value}}"
}
----
