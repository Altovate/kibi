[[access_control]]

== Authentication and access control [Enterprise Edition only]

ifeval::["{enterprise_enabled}" == "false"]
  NOTE: Documentation for Authentication and access control is available only in Kibi Enterprise Edition.
endif::[]

ifeval::["{enterprise_enabled}" == "true"]

Kibi EE can be integrated with Elasticsearch clusters protected by either
Search Guard or Elastic Shield, providing configurable handling of
authorization errors with specific extensions for the SIREn Join plugin.

In this scenario, both Kibi and Gremlin Server (the backend component
used by the <<graph_browser,graph browser>> visualization) must be configured to serve requests over HTTPS.

=== Enabling HTTPS in Kibi

HTTPS support in Kibi can be enabled natively or by putting a reverse SSL proxy in front of it (e.g. nginx).

==== Native HTTPS support

Native HTTPS support can be enabled by copying certificate and key files to a
location readable by the Kibi process and setting the following parameters
in `config/kibi.yml`:

- **server.ssl.cert**: path to a certificate.
- **server.ssl.key**: path to the certificate key.

Both files must be PEM encoded.

E.g.:

[source,yaml]
----
server.ssl.cert: "pki/server.crt"
server.ssl.key: "pki/server.key"
----

The Kibi EE demo distribution includes a sample certificate and key in the `pki`
directory.

=== Enabling HTTPS in Gremlin Server

HTTPS must be enabled in Gremlin Server to secure requests from Kibi, even
if Kibi is configured behind a reverse SSL proxy.

To enable HTTPS in the Gremlin Server, set the following parameters in the
`kibi_core.gremlin_server` section of the `config/kibi.yml` file:

- **url**: the URL of the Gremlin Server endpoint; make sure that the protocol is set to `https`.
- **ssl.key_store**: the path to the Gremlin Server certificate in Java KeyStore format.
- **ssl.key_store_password**: the password of the Gremlin Server certificate keystore.
- **ssl.ca**: set to the path of the certification authority chain bundle that
  can be used to validate requests from Kibi to the Gremlin API; you can omit
  this parameter if the certificates for the Kibi HTTPS interface have been
  issue and signed by a public authority.

E.g.:

[source,yaml]
----
kibi_core:
  gremlin_server:
    url: https://127.0.0.1:8061
    ssl:
      key_store: "pki/gremlin.jks"
      key_store_password: "password"
      ca: "pki/cacert.pem"
----

After restarting Kibi, click on **Settings**, then click on **Datasources**,
and make sure that the URL of the `Kibi Gremlin Server` datasource is equal
to the url set in `kibi.yml`.

The Kibi EE demo distribution includes a sample keystore and CA bundle
in the `pki` directory.

