[[access_control]]
= Authentication and Access Control

Kibi  can be integrated with Elasticsearch clusters protected by either
Search Guard or Elastic x-pack.

In this scenario, both Kibi and Gremlin Server (the backend component
used by the <<graph_browser,graph browser>> visualization) must be configured to serve requests over HTTPS.

[float]
== Enabling HTTPS in Kibi

SSL support in the Kibi HTTP interface can be enabled natively or by putting a reverse SSL proxy in front of it (e.g. nginx).

[float]
=== Native SSL Support

Native SSL support can be enabled by copying the certificate and key files to a
location readable by the Kibi process and setting the following parameters
in `config/kibi.yml`:

- `server.ssl.enabled`: set to `true` to enable SSL.
- `server.ssl.certificate`: path to a certificate.
- `server.ssl.key`: path to the certificate key.
- `server.ssl.keyPassphrase`: the passphrase of the certificate key; if the key is not encrypted the parameter can be omitted.

The certificate and key files must be PEM encoded.

E.g.:

[source,yaml]
----
server.ssl.enabled: true
server.ssl.certificate: "pki/server.crt"
server.ssl.key: "pki/server.key"
----

The Kibi  demo distribution includes a sample certificate and key in the `pki`
directory.

NOTE: For additional SSL settings please refer to the <<settings,settings chapter>>.

[float]
== Enabling HTTPS in Gremlin Server

HTTPS must be enabled in Gremlin Server to secure requests from Kibi, even
if Kibi is configured behind a reverse SSL proxy.

To enable HTTPS in the Gremlin Server, set the following parameters in the
`kibi_core.gremlin_server` section of the `config/kibi.yml` file:

- **url**: the URL of the Gremlin Server endpoint; make sure that the protocol is set to `https`.
- **ssl.key_store**: the path to the Gremlin Server certificate in Java KeyStore format.
- **ssl.key_store_password**: the password of the Gremlin Server certificate keystore.
- **ssl.ca**: the path of the certification authority chain bundle that
  can be used to validate requests from Kibi to the Gremlin API; you can omit
  this parameter if the certificates for the Kibi HTTPS interface have been
  issued and signed by a public authority.

E.g.:

[source,yaml]
----
kibi_core:
  gremlin_server:
    url: https://127.0.0.1:8061
    ssl:
      key_store: "pki/gremlin.jks"
      key_store_password: "password"
      ca: "pki/cacert.pem"
----

After restarting Kibi, click on **Settings**, then click on **Datasources**,
and make sure that the URL of the `Kibi Gremlin Server` datasource is equal
to the url set in `kibi.yml`.

The Kibi  demo distribution includes a sample keystore and CA bundle
in the `pki` directory.
